/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IOperationsRegistryInterface extends ethers.utils.Interface {
  functions: {
    "addTrade(address,bytes4,uint256)": FunctionFragment;
    "allowAsset(address)": FunctionFragment;
    "disallowAsset(address)": FunctionFragment;
    "setEurPriceFeed(address)": FunctionFragment;
    "tradingBalanceByOperation(address,bytes4)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addTrade",
    values: [string, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "allowAsset", values: [string]): string;
  encodeFunctionData(
    functionFragment: "disallowAsset",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setEurPriceFeed",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "tradingBalanceByOperation",
    values: [string, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "addTrade", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "allowAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "disallowAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEurPriceFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tradingBalanceByOperation",
    data: BytesLike
  ): Result;

  events: {};
}

export class IOperationsRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IOperationsRegistryInterface;

  functions: {
    addTrade(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addTrade(address,bytes4,uint256)"(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    allowAsset(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "allowAsset(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disallowAsset(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disallowAsset(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setEurPriceFeed(
      _eurPriceFeed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setEurPriceFeed(address)"(
      _eurPriceFeed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    tradingBalanceByOperation(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "tradingBalanceByOperation(address,bytes4)"(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  addTrade(
    _user: string,
    _operation: BytesLike,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addTrade(address,bytes4,uint256)"(
    _user: string,
    _operation: BytesLike,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  allowAsset(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "allowAsset(address)"(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disallowAsset(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disallowAsset(address)"(
    _asset: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setEurPriceFeed(
    _eurPriceFeed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setEurPriceFeed(address)"(
    _eurPriceFeed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  tradingBalanceByOperation(
    _user: string,
    _operation: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tradingBalanceByOperation(address,bytes4)"(
    _user: string,
    _operation: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    addTrade(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addTrade(address,bytes4,uint256)"(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    allowAsset(_asset: string, overrides?: CallOverrides): Promise<boolean>;

    "allowAsset(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    disallowAsset(_asset: string, overrides?: CallOverrides): Promise<boolean>;

    "disallowAsset(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setEurPriceFeed(
      _eurPriceFeed: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "setEurPriceFeed(address)"(
      _eurPriceFeed: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    tradingBalanceByOperation(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tradingBalanceByOperation(address,bytes4)"(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    addTrade(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addTrade(address,bytes4,uint256)"(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    allowAsset(_asset: string, overrides?: Overrides): Promise<BigNumber>;

    "allowAsset(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disallowAsset(_asset: string, overrides?: Overrides): Promise<BigNumber>;

    "disallowAsset(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setEurPriceFeed(
      _eurPriceFeed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setEurPriceFeed(address)"(
      _eurPriceFeed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    tradingBalanceByOperation(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tradingBalanceByOperation(address,bytes4)"(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addTrade(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addTrade(address,bytes4,uint256)"(
      _user: string,
      _operation: BytesLike,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    allowAsset(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "allowAsset(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disallowAsset(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disallowAsset(address)"(
      _asset: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setEurPriceFeed(
      _eurPriceFeed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setEurPriceFeed(address)"(
      _eurPriceFeed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    tradingBalanceByOperation(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tradingBalanceByOperation(address,bytes4)"(
      _user: string,
      _operation: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Greeter } from "../Greeter";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_greeting: string, overrides?: Overrides): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a2a380380610a2a8339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b5060608101604052602280825261010b94509092509050610a0860208301398261012560201b61035b1760201c565b805161011e90600090602084019061025c565b50506102fd565b6102378282604051602401808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561016e578181015183820152602001610156565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101ce5781810151838201526020016101b6565b50505050905090810190601f1680156101fb5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03908116634b5c427760e01b1790915290955061023b169350505050565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261029257600085556102d8565b82601f106102ab57805160ff19168380011785556102d8565b828001600101855582156102d8579182015b828111156102d85782518255916020019190600101906102bd565b506102e49291506102e8565b5090565b5b808211156102e457600081556001016102e9565b6106fc8061030c6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae3217146100ee578063ef690cc01461016b575b600080fd5b6100ec6004803603602081101561005c57600080fd5b81019060208101813564010000000081111561007757600080fd5b82018360208201111561008957600080fd5b803590602001918460018302840111640100000000831117156100ab57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610173945050505050565b005b6100f6610237565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610130578181015183820152602001610118565b50505050905090810190601f16801561015d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f66102cd565b6102206040518060600160405280602381526020016106a4602391396000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102155780601f106101ea57610100808354040283529160200191610215565b820191906000526020600020905b8154815290600101906020018083116101f857829003601f168201915b505050505083610468565b8051610233906000906020840190610602565b5050565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b5050505050905090565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103535780601f1061032857610100808354040283529160200191610353565b820191906000526020600020905b81548152906001019060200180831161033657829003601f168201915b505050505081565b6102338282604051602401808060200180602001838103835285818151815260200191508051906020019080838360005b838110156103a457818101518382015260200161038c565b50505050905090810190601f1680156103d15780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156104045781810151838201526020016103ec565b50505050905090810190601f1680156104315780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905294506105e19350505050565b6105dc83838360405160240180806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156104b657818101518382015260200161049e565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b838110156105165781810151838201526020016104fe565b50505050905090810190601f1680156105435780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b8381101561057657818101518382015260200161055e565b50505050905090810190601f1680156105a35780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b17905296506105e195505050505050565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610638576000855561067e565b82601f1061065157805160ff191683800117855561067e565b8280016001018555821561067e579182015b8281111561067e578251825591602001919060010190610663565b5061068a92915061068e565b5090565b5b8082111561068a576000815560010161068f56fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a264697066735822122054f0a91c06b1a92a74fa974053e7b89561c3c265ad1ee34ba512411a3c367f1d64736f6c634300070400334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

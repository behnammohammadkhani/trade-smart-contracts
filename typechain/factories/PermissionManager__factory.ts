/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PermissionManager } from "../PermissionManager";

export class PermissionManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PermissionManager> {
    return super.deploy(overrides || {}) as Promise<PermissionManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PermissionManager {
    return super.attach(address) as PermissionManager;
  }
  connect(signer: Signer): PermissionManager__factory {
    return super.connect(signer) as PermissionManager__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PermissionManager {
    return new Contract(address, _abi, signerOrProvider) as PermissionManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPermissions",
        type: "address",
      },
    ],
    name: "PermissionItemsSetted",
    type: "event",
  },
  {
    inputs: [],
    name: "PROTOCOL_CONTRACT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REJECTED_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUSPENDED_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_1_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_2_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "assingTier1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
        ],
        internalType: "struct PermissionManager.UserProxy[]",
        name: "_usersProxies",
        type: "tuple[]",
      },
    ],
    name: "assingTier2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "hasTier1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "hasTier2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_permissionItems",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isRejected",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isSuspended",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionItems",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
        ],
        internalType: "struct PermissionManager.UserProxy[]",
        name: "_usersProxies",
        type: "tuple[]",
      },
    ],
    name: "rejectUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "revokeTier1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
        ],
        internalType: "struct PermissionManager.UserProxy[]",
        name: "_usersProxies",
        type: "tuple[]",
      },
    ],
    name: "revokeTier2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_permissionItems",
        type: "address",
      },
    ],
    name: "setPermissionItems",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
        ],
        internalType: "struct PermissionManager.UserProxy[]",
        name: "_usersProxies",
        type: "tuple[]",
      },
    ],
    name: "suspendUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
        ],
        internalType: "struct PermissionManager.UserProxy[]",
        name: "_usersProxies",
        type: "tuple[]",
      },
    ],
    name: "unrejectUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
        ],
        internalType: "struct PermissionManager.UserProxy[]",
        name: "_usersProxies",
        type: "tuple[]",
      },
    ],
    name: "unsuspendUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ebd806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063c4d66de8116100c3578063df2f73a01161007c578063df2f73a01461027a578063e73ccb3c1461028d578063f15e0b60146102a0578063f2fde38b146102b3578063fc8a5364146102c6578063fd32b059146102ce5761014d565b8063c4d66de814610229578063c6b6c17a1461023c578063cbbc66ef14610244578063d4d4bcdb1461024c578063d88a89511461025f578063d9d7b472146102725761014d565b806348a46bd31161011557806348a46bd3146101c057806350622e9b146101d3578063715018a6146101e65780637cc1bb7f146101ee57806382e672d6146102015780638da5cb5b146102145761014d565b80630d80aa961461015257806318dc8bed14610170578063232e0e9a14610190578063260afc1d146101a35780632d703a09146101b8575b600080fd5b61015a6102e1565b6040516101679190611dc8565b60405180910390f35b61018361017e3660046116cc565b6102e6565b60405161016791906118f5565b61018361019e3660046116cc565b6103c7565b6101b66101b1366004611789565b6103da565b005b61015a6105a2565b6101836101ce3660046116cc565b6105a7565b6101b66101e13660046116ed565b6105b4565b6101b66106db565b6101b66101fc366004611789565b61077d565b61018361020f3660046116cc565b610943565b61021c610950565b6040516101679190611877565b6101b66102373660046116cc565b61095f565b61015a610a82565b61015a610a87565b6101b661025a366004611789565b610a8c565b61018361026d3660046116cc565b610c52565b61015a610c5f565b6101b66102883660046116ed565b610c64565b6101b661029b366004611789565b610d7d565b6101b66102ae366004611789565b610f31565b6101b66102c13660046116cc565b6110e7565b61021c6111e0565b6101b66102dc366004611789565b6111ef565b600481565b60006102f06113b3565b6033546001600160a01b03908116911614610340576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b6001600160a01b03821661036f5760405162461bcd60e51b8152600401610366906119a1565b60405180910390fd5b6040516001600160a01b038316907f5cf3ee68ff962dbb278fe94313961466b214821783222e46baeb069cb1a59bff90600090a250606580546001600160a01b0319166001600160a01b03831617905560015b919050565b60006103d48260006113b7565b92915050565b6103e26113b3565b6033546001600160a01b03908116911614610432576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e5761044661169e565b82828151811061045257fe5b6020026020010151905061046981600001516103c7565b6104855760405162461bcd60e51b815260040161036690611c29565b6065548151604051637a94c56560e11b81526001600160a01b039092169163f5298aca916104bb916000906001906004016118a4565b600060405180830381600087803b1580156104d557600080fd5b505af11580156104e9573d6000803e3d6000fd5b5050505060208101516001600160a01b0316156105955761050d81602001516103c7565b6105295760405162461bcd60e51b815260040161036690611a91565b6065546020820151604051637a94c56560e11b81526001600160a01b039092169163f5298aca91610562916000906001906004016118a4565b600060405180830381600087803b15801561057c57600080fd5b505af1158015610590573d6000803e3d6000fd5b505050505b50600101610435565b5050565b600281565b60006103d48260036113b7565b6105bc6113b3565b6033546001600160a01b0390811691161461060c576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e5761063482828151811061062757fe5b6020026020010151610c52565b156106515760405162461bcd60e51b815260040161036690611d24565b60655482516001600160a01b039091169063731133e99084908490811061067457fe5b60200260200101516001806040518463ffffffff1660e01b815260040161069d939291906118c5565b600060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b50506001909201915061060f9050565b6106e36113b3565b6033546001600160a01b03908116911614610733576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6107856113b3565b6033546001600160a01b039081169116146107d5576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e576107e961169e565b8282815181106107f557fe5b6020026020010151905061080c81600001516103c7565b156108295760405162461bcd60e51b815260040161036690611bda565b606554815160405163731133e960e01b81526001600160a01b039092169163731133e99161085f916000906001906004016118c5565b600060405180830381600087803b15801561087957600080fd5b505af115801561088d573d6000803e3d6000fd5b5050505060208101516001600160a01b03161561093a576108b181602001516103c7565b156108ce5760405162461bcd60e51b815260040161036690611900565b606554602082015160405163731133e960e01b81526001600160a01b039092169163731133e991610907916000906001906004016118c5565b600060405180830381600087803b15801561092157600080fd5b505af1158015610935573d6000803e3d6000fd5b505050505b506001016107d8565b60006103d48260026113b7565b6033546001600160a01b031690565b600054610100900460ff1680610978575061097861144d565b80610986575060005460ff16155b6109c15760405162461bcd60e51b815260040180806020018281038252602e815260200180611e3a602e913960400191505060405180910390fd5b600054610100900460ff161580156109ec576000805460ff1961ff0019909116610100171660011790555b6001600160a01b038216610a125760405162461bcd60e51b8152600401610366906119a1565b606580546001600160a01b0319166001600160a01b038416179055610a35611453565b6065546040516001600160a01b03909116907f5cf3ee68ff962dbb278fe94313961466b214821783222e46baeb069cb1a59bff90600090a2801561059e576000805461ff00191690555050565b600181565b600381565b610a946113b3565b6033546001600160a01b03908116911614610ae4576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e57610af861169e565b828281518110610b0457fe5b60200260200101519050610b1b81600001516105a7565b15610b385760405162461bcd60e51b815260040161036690611d7a565b606554815160405163731133e960e01b81526001600160a01b039092169163731133e991610b6e916003906001906004016118c5565b600060405180830381600087803b158015610b8857600080fd5b505af1158015610b9c573d6000803e3d6000fd5b5050505060208101516001600160a01b031615610c4957610bc081602001516105a7565b15610bdd5760405162461bcd60e51b815260040161036690611b8e565b606554602082015160405163731133e960e01b81526001600160a01b039092169163731133e991610c16916003906001906004016118c5565b600060405180830381600087803b158015610c3057600080fd5b505af1158015610c44573d6000803e3d6000fd5b505050505b50600101610ae7565b60006103d48260016113b7565b600081565b610c6c6113b3565b6033546001600160a01b03908116911614610cbc576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e57610cd782828151811061062757fe5b610cf35760405162461bcd60e51b8152600401610366906119e5565b60655482516001600160a01b039091169063f5298aca90849084908110610d1657fe5b60200260200101516001806040518463ffffffff1660e01b8152600401610d3f939291906118a4565b600060405180830381600087803b158015610d5957600080fd5b505af1158015610d6d573d6000803e3d6000fd5b505060019092019150610cbf9050565b610d856113b3565b6033546001600160a01b03908116911614610dd5576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e57610de961169e565b828281518110610df557fe5b60200260200101519050610e0c8160000151610943565b610e285760405162461bcd60e51b815260040161036690611ae4565b610e358160200151610943565b610e515760405162461bcd60e51b815260040161036690611b3a565b6065548151604051637a94c56560e11b81526001600160a01b039092169163f5298aca91610e87916002906001906004016118a4565b600060405180830381600087803b158015610ea157600080fd5b505af1158015610eb5573d6000803e3d6000fd5b50506065546020840151604051637a94c56560e11b81526001600160a01b03909216935063f5298aca9250610ef2916002906001906004016118a4565b600060405180830381600087803b158015610f0c57600080fd5b505af1158015610f20573d6000803e3d6000fd5b505060019093019250610dd8915050565b610f396113b3565b6033546001600160a01b03908116911614610f89576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e57610f9d61169e565b828281518110610fa957fe5b60200260200101519050610fc08160000151610943565b15610fdd5760405162461bcd60e51b815260040161036690611a3b565b610fea8160200151610943565b156110075760405162461bcd60e51b815260040161036690611cd0565b606554815160405163731133e960e01b81526001600160a01b039092169163731133e99161103d916002906001906004016118c5565b600060405180830381600087803b15801561105757600080fd5b505af115801561106b573d6000803e3d6000fd5b5050606554602084015160405163731133e960e01b81526001600160a01b03909216935063731133e992506110a8916002906001906004016118c5565b600060405180830381600087803b1580156110c257600080fd5b505af11580156110d6573d6000803e3d6000fd5b505060019093019250610f8c915050565b6110ef6113b3565b6033546001600160a01b0390811691161461113f576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b6001600160a01b0381166111845760405162461bcd60e51b8152600401808060200182810382526026815260200180611e146026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031681565b6111f76113b3565b6033546001600160a01b03908116911614611247576040805162461bcd60e51b81526020600482018190526024820152600080516020611e68833981519152604482015290519081900360640190fd5b60005b815181101561059e5761125b61169e565b82828151811061126757fe5b6020026020010151905061127e81600001516105a7565b61129a5760405162461bcd60e51b81526004016103669061194d565b6065548151604051637a94c56560e11b81526001600160a01b039092169163f5298aca916112d0916003906001906004016118a4565b600060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b5050505060208101516001600160a01b0316156113aa5761132281602001516105a7565b61133e5760405162461bcd60e51b815260040161036690611c7e565b6065546020820151604051637a94c56560e11b81526001600160a01b039092169163f5298aca91611377916003906001906004016118a4565b600060405180830381600087803b15801561139157600080fd5b505af11580156113a5573d6000803e3d6000fd5b505050505b5060010161124a565b3390565b606554604051627eeac760e11b81526000916001600160a01b03169062fdd58e906113e8908690869060040161188b565b60206040518083038186803b15801561140057600080fd5b505afa158015611414573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611438919061185f565b611444575060006103d4565b50600192915050565b303b1590565b600054610100900460ff168061146c575061146c61144d565b8061147a575060005460ff16155b6114b55760405162461bcd60e51b815260040180806020018281038252602e815260200180611e3a602e913960400191505060405180910390fd5b600054610100900460ff161580156114e0576000805460ff1961ff0019909116610100171660011790555b6114e8611505565b6114f06115a5565b8015611502576000805461ff00191690555b50565b600054610100900460ff168061151e575061151e61144d565b8061152c575060005460ff16155b6115675760405162461bcd60e51b815260040180806020018281038252602e815260200180611e3a602e913960400191505060405180910390fd5b600054610100900460ff161580156114f0576000805460ff1961ff0019909116610100171660011790558015611502576000805461ff001916905550565b600054610100900460ff16806115be57506115be61144d565b806115cc575060005460ff16155b6116075760405162461bcd60e51b815260040180806020018281038252602e815260200180611e3a602e913960400191505060405180910390fd5b600054610100900460ff16158015611632576000805460ff1961ff0019909116610100171660011790555b600061163c6113b3565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015611502576000805461ff001916905550565b604080518082019091526000808252602082015290565b80356001600160a01b03811681146103c257600080fd5b6000602082840312156116dd578081fd5b6116e6826116b5565b9392505050565b600060208083850312156116ff578182fd5b823567ffffffffffffffff811115611715578283fd5b8301601f81018513611725578283fd5b803561173861173382611df5565b611dd1565b8181528381019083850185840285018601891015611754578687fd5b8694505b8385101561177d57611769816116b5565b835260019490940193918501918501611758565b50979650505050505050565b6000602080838503121561179b578182fd5b823567ffffffffffffffff808211156117b2578384fd5b818501915085601f8301126117c5578384fd5b81356117d361173382611df5565b818152848101908486016040808502870188018b10156117f1578889fd5b8896505b848710156118505780828c03121561180b578889fd5b8051818101818110888211171561181e57fe5b8252611829836116b5565b81526118368984016116b5565b818a015284526001969096019592870192908101906117f5565b50909998505050505050505050565b600060208284031215611870578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039390931683526020830191909152604082015260806060820181905260009082015260a00190565b901515815260200190565b6020808252602d908201527f5065726d697373696f6e4d616e616765723a2050726f787920697320616c726560408201526c18591e481cdd5cdc195b991959609a1b606082015260800190565b60208082526034908201527f5065726d697373696f6e4d616e616765723a2041646472657373206973206e6f6040820152731d0818dd5c9c995b9d1b1e481c995a9958dd195960621b606082015260800190565b60208082526024908201527f5f7065726d697373696f6e4974656d7320697320746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526036908201527f5065726d697373696f6e4d616e616765723a204164647265737320646f65736e60408201527509dd081a185cc8151a595c880c48185cdcda59db995960521b606082015260800190565b60208082526036908201527f5065726d697373696f6e4d616e616765723a204164647265737320616c726561604082015275191e481a185cc8151a595c880c88185cdcda59db995960521b606082015260800190565b60208082526033908201527f5065726d697373696f6e4d616e616765723a2050726f7879206973206e6f742060408201527218dd5c9c995b9d1b1e481cdd5cdc195b991959606a1b606082015260800190565b60208082526036908201527f5065726d697373696f6e4d616e616765723a204164647265737320646f65736e60408201527509dd081a185cc8151a595c880c88185cdcda59db995960521b606082015260800190565b60208082526034908201527f5065726d697373696f6e4d616e616765723a2050726f787920646f65736e2774604082015273081a185cc8151a595c880c88185cdcda59db995960621b606082015260800190565b6020808252602c908201527f5065726d697373696f6e4d616e616765723a2050726f787920697320616c726560408201526b18591e481c995a9958dd195960a21b606082015260800190565b6020808252602f908201527f5065726d697373696f6e4d616e616765723a204164647265737320697320616c60408201526e1c9958591e481cdd5cdc195b991959608a1b606082015260800190565b60208082526035908201527f5065726d697373696f6e4d616e616765723a2041646472657373206973206e6f6040820152741d0818dd5c9c995b9d1b1e481cdd5cdc195b991959605a1b606082015260800190565b60208082526032908201527f5065726d697373696f6e4d616e616765723a2050726f7879206973206e6f742060408201527118dd5c9c995b9d1b1e481c995a9958dd195960721b606082015260800190565b60208082526034908201527f5065726d697373696f6e4d616e616765723a2050726f787920616c7265616479604082015273081a185cc8151a595c880c88185cdcda59db995960621b606082015260800190565b60208082526036908201527f5065726d697373696f6e4d616e616765723a204164647265737320616c726561604082015275191e481a185cc8151a595c880c48185cdcda59db995960521b606082015260800190565b6020808252602e908201527f5065726d697373696f6e4d616e616765723a204164647265737320697320616c60408201526d1c9958591e481c995a9958dd195960921b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff81118282101715611ded57fe5b604052919050565b600067ffffffffffffffff821115611e0957fe5b506020908102019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220869d1c74183c99cd37a1543d481f7cb3f98ffbea66ea86a7645abc9ef2e0f26964736f6c63430007040033";

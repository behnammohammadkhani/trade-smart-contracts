/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BPollProxy } from "../BPollProxy";

export class BPollProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BPollProxy> {
    return super.deploy(overrides || {}) as Promise<BPollProxy>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BPollProxy {
    return super.attach(address) as BPollProxy;
  }
  connect(signer: Signer): BPollProxy__factory {
    return super.connect(signer) as BPollProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BPollProxy {
    return new Contract(address, _abi, signerOrProvider) as BPollProxy;
  }
}

const _abi = [
  {
    anonymous: true,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LOG_CALL",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenInParam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenOutParam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct BPollProxy.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTotalAmountOut",
        type: "uint256",
      },
    ],
    name: "batchSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenInParam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenOutParam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct BPollProxy.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxTotalAmountIn",
        type: "uint256",
      },
    ],
    name: "batchSwapExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f8b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636d24fb961461003b578063f437824014610064575b600080fd5b61004e610049366004610c64565b610077565b60405161005b9190610f28565b60405180910390f35b61004e610072366004610cc8565b6105c0565b60405160009033906001600160e01b0319833516906100999084903690610e30565b60405180910390a260005460ff16156100cd5760405162461bcd60e51b81526004016100c490610eac565b60405180910390fd5b6000805460ff191660011790556040516323b872dd60e01b8152849084906001600160a01b038316906323b872dd9061010e90339030908990600401610da5565b602060405180830381600087803b15801561012857600080fd5b505af115801561013c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101609190610d36565b61017c5760405162461bcd60e51b81526004016100c490610ed1565b60005b875181101561036957610190610b2d565b88828151811061019c57fe5b60209081029190910101518051604051636eb1769f60e11b81529192509087906001600160a01b0387169063dd62ed3e906101dd9030908690600401610de2565b60206040518083038186803b1580156101f557600080fd5b505afa158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d9190610d56565b10156102b857815160405163095ea7b360e01b81526001600160a01b0387169163095ea7b391610264919060001990600401610dc9565b602060405180830381600087803b15801561027e57600080fd5b505af1158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b69190610d36565b505b6000816001600160a01b0316637c5e9ea48b85602001518c876040015188606001516040518663ffffffff1660e01b81526004016102fa959493929190610dfc565b6040805180830381600087803b15801561031357600080fd5b505af1158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190610d6e565b5090506103588188610b01565b9650506001909201915061017f9050565b508383111561038a5760405162461bcd60e51b81526004016100c490610e86565b6040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a08231906103c0903090600401610d91565b60206040518083038186803b1580156103d857600080fd5b505afa1580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104109190610d56565b6040518363ffffffff1660e01b815260040161042d929190610dc9565b602060405180830381600087803b15801561044757600080fd5b505af115801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190610d36565b61049b5760405162461bcd60e51b81526004016100c490610ed1565b6040516370a0823160e01b81526001600160a01b0383169063a9059cbb90339083906370a08231906104d1903090600401610d91565b60206040518083038186803b1580156104e957600080fd5b505afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105219190610d56565b6040518363ffffffff1660e01b815260040161053e929190610dc9565b602060405180830381600087803b15801561055857600080fd5b505af115801561056c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105909190610d36565b6105ac5760405162461bcd60e51b81526004016100c490610ed1565b50506000805460ff19169055949350505050565b60405160009033906001600160e01b0319833516906105e29084903690610e30565b60405180910390a260005460ff161561060d5760405162461bcd60e51b81526004016100c490610eac565b6000805460ff191660011790556040516323b872dd60e01b8152859085906001600160a01b038316906323b872dd9061064e90339030908a90600401610da5565b602060405180830381600087803b15801561066857600080fd5b505af115801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a09190610d36565b6106bc5760405162461bcd60e51b81526004016100c490610ed1565b60005b88518110156108a9576106d0610b2d565b8982815181106106dc57fe5b60209081029190910101518051604051636eb1769f60e11b81529192509088906001600160a01b0387169063dd62ed3e9061071d9030908690600401610de2565b60206040518083038186803b15801561073557600080fd5b505afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d9190610d56565b10156107f857815160405163095ea7b360e01b81526001600160a01b0387169163095ea7b3916107a4919060001990600401610dc9565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190610d36565b505b6000816001600160a01b0316638201aa3f8c85602001518d876040015188606001516040518663ffffffff1660e01b815260040161083a959493929190610dfc565b6040805180830381600087803b15801561085357600080fd5b505af1158015610867573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088b9190610d6e565b5090506108988188610b01565b965050600190920191506106bf9050565b50838310156108ca5760405162461bcd60e51b81526004016100c490610e5f565b6040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a0823190610900903090600401610d91565b60206040518083038186803b15801561091857600080fd5b505afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109509190610d56565b6040518363ffffffff1660e01b815260040161096d929190610dc9565b602060405180830381600087803b15801561098757600080fd5b505af115801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190610d36565b6109db5760405162461bcd60e51b81526004016100c490610ed1565b6040516370a0823160e01b81526001600160a01b0383169063a9059cbb90339083906370a0823190610a11903090600401610d91565b60206040518083038186803b158015610a2957600080fd5b505afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190610d56565b6040518363ffffffff1660e01b8152600401610a7e929190610dc9565b602060405180830381600087803b158015610a9857600080fd5b505af1158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190610d36565b610aec5760405162461bcd60e51b81526004016100c490610ed1565b50506000805460ff1916905595945050505050565b600082820183811015610b265760405162461bcd60e51b81526004016100c490610efe565b9392505050565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160a01b0381168114610b7557600080fd5b919050565b600082601f830112610b8a578081fd5b813567ffffffffffffffff811115610b9e57fe5b6020610bad8182840201610f31565b8281529250808301848201608080850287018401881015610bcd57600080fd5b60005b85811015610bf457610be28984610c00565b84529284019291810191600101610bd0565b50505050505092915050565b600060808284031215610c11578081fd5b6040516080810181811067ffffffffffffffff82111715610c2e57fe5b604052905080610c3d83610b5e565b81526020830135602082015260408301356040820152606083013560608201525092915050565b60008060008060808587031215610c79578384fd5b843567ffffffffffffffff811115610c8f578485fd5b610c9b87828801610b7a565b945050610caa60208601610b5e565b9250610cb860408601610b5e565b9396929550929360600135925050565b600080600080600060a08688031215610cdf578081fd5b853567ffffffffffffffff811115610cf5578182fd5b610d0188828901610b7a565b955050610d1060208701610b5e565b9350610d1e60408701610b5e565b94979396509394606081013594506080013592915050565b600060208284031215610d47578081fd5b81518015158114610b26578182fd5b600060208284031215610d67578081fd5b5051919050565b60008060408385031215610d80578182fd5b505080516020909101519092909150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03958616815260208101949094529190931660408301526060820192909252608081019190915260a00190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b6020808252600d908201526c11549497d31253525517d3d555609a1b604082015260600190565b6020808252600c908201526b22a9292fa624a6a4aa2fa4a760a11b604082015260600190565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b60208082526013908201527211549497d514905394d1915497d19052531151606a1b604082015260600190565b60208082526010908201526f4552525f4144445f4f564552464c4f5760801b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610f4d57fe5b60405291905056fea2646970667358221220cf3b1abc503e44919ea1272fec8bbb94665a76094460a9c6c770229bace0cc4364736f6c63430007040033";

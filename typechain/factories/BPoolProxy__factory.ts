/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BPoolProxy } from "../BPoolProxy";

export class BPoolProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _registry: string,
    _protocolFee: string,
    _feeReceiver: string,
    overrides?: Overrides
  ): Promise<BPoolProxy> {
    return super.deploy(
      _registry,
      _protocolFee,
      _feeReceiver,
      overrides || {}
    ) as Promise<BPoolProxy>;
  }
  getDeployTransaction(
    _registry: string,
    _protocolFee: string,
    _feeReceiver: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registry,
      _protocolFee,
      _feeReceiver,
      overrides || {}
    );
  }
  attach(address: string): BPoolProxy {
    return super.attach(address) as BPoolProxy;
  }
  connect(signer: Signer): BPoolProxy__factory {
    return super.connect(signer) as BPoolProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BPoolProxy {
    return new Contract(address, _abi, signerOrProvider) as BPoolProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolFee",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "FeeReceiverSetted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "protocolFee",
        type: "address",
      },
    ],
    name: "ProtocolFeeSetted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "RegistrySetted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swapAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ISwap.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "contract IXToken",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "contract IXToken",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTotalAmountOut",
        type: "uint256",
      },
    ],
    name: "batchSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swapAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ISwap.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "contract IXToken",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "contract IXToken",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxTotalAmountIn",
        type: "uint256",
      },
    ],
    name: "batchSwapExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swapAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ISwap.Swap[][]",
        name: "swapSequences",
        type: "tuple[][]",
      },
      {
        internalType: "contract IXToken",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "contract IXToken",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTotalAmountOut",
        type: "uint256",
      },
    ],
    name: "multihopBatchSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swapAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ISwap.Swap[][]",
        name: "swapSequences",
        type: "tuple[][]",
      },
      {
        internalType: "contract IXToken",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "contract IXToken",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxTotalAmountIn",
        type: "uint256",
      },
    ],
    name: "multihopBatchSwapExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "contract IProtocolFee",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IBRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolFee",
        type: "address",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IXToken",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "contract IXToken",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTotalAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nPools",
        type: "uint256",
      },
    ],
    name: "smartSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IXToken",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "contract IXToken",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTotalAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nPools",
        type: "uint256",
      },
    ],
    name: "smartSwapExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nPools",
        type: "uint256",
      },
    ],
    name: "viewSplitExactIn",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swapAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ISwap.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalOutput",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nPools",
        type: "uint256",
      },
    ],
    name: "viewSplitExactOut",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swapAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ISwap.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalOutput",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620034a6380380620034a68339810160408190526200003491620001e6565b600062000040620000b4565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200009583620000b8565b620000a08262000113565b620000ab816200016e565b50505062000243565b3390565b7fa084363882435b633c312dcb0f18e29e4e4197405db0122962e0401f4804e0ed81604051620000e991906200022f565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b7ffc1355c6bf6e341201ba7695c4f879f57bbf28f42793686ed3dc8c21935b0108816040516200014491906200022f565b60405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b7f83f3a95cc2d5751cae39beaf6ba7c0c63cfd790bb5bce6570d1572cf812233a4816040516200019f91906200022f565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b0381168114620001e157600080fd5b919050565b600080600060608486031215620001fb578283fd5b6200020684620001c9565b92506200021660208501620001c9565b91506200022660408501620001c9565b90509250925092565b6001600160a01b0391909116815260200190565b61325380620002536000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638743ad58116100a2578063b3f0067411610071578063b3f00674146101fb578063b40f39ee14610203578063e2b3974614610216578063efdcd97414610229578063f2fde38b1461023c5761010b565b80638743ad58146101c55780638da5cb5b146101d8578063a91ee0dc146101e0578063b0e21e8a146101f35761010b565b806363db0d3d116100de57806363db0d3d14610180578063715018a6146101955780637b1039991461019d57806386b2ecc4146101b25761010b565b806321b0eb85146101105780632db5813414610139578063368bb1fc1461014c5780634b0f93fb1461016d575b600080fd5b61012361011e366004612eff565b61024f565b6040516101309190613130565b60405180910390f35b610123610147366004612e71565b61027a565b61015f61015a366004612cbc565b6105f5565b604051610130929190613029565b61015f61017b366004612cbc565b6109d2565b61019361018e366004612ca0565b610cf8565b005b610193610d5c565b6101a5610dfe565b6040516101309190612f8a565b6101236101c0366004612d99565b610e0d565b6101236101d3366004612ea7565b6117c3565b6101a5611acd565b6101936101ee366004612ca0565b611adc565b6101a5611b3d565b6101a5611b4c565b610123610211366004612eff565b611b5b565b610123610224366004612e00565b611b7a565b610193610237366004612ca0565b611e7c565b61019361024a366004612ca0565b611edd565b6000606061025f878787866109d2565b50905061026f81888888886117c3565b979650505050505050565b6000610287848330611fd5565b5060005b85518110156105085761029c612ab2565b8682815181106102a857fe5b602090810291909101810151908101518151604051636eb1769f60e11b815292935090916000906001600160a01b0384169063dd62ed3e906102f09030908690600401612fdb565b60206040518083038186803b15801561030857600080fd5b505afa15801561031c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103409190612f4f565b11156103ca57825160405163095ea7b360e01b81526001600160a01b0384169163095ea7b3916103769190600090600401612fc2565b602060405180830381600087803b15801561039057600080fd5b505af11580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190612edf565b505b8251608084015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b3926103fb92600401612fc2565b602060405180830381600087803b15801561041557600080fd5b505af1158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d9190612edf565b5060208301516080840151604080860151606087015160a08801519251631f17a7a960e21b81526000956001600160a01b03881695637c5e9ea4956104989592949193600401612ff5565b6040805180830381600087803b1580156104b157600080fd5b505af11580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190612f67565b5090506104f6818761207d565b9550506001909301925061028b915050565b50818111156105325760405162461bcd60e51b8152600401610529906130dd565b60405180910390fd5b60025460405163886b917560e01b81526105cb9186916001600160a01b039091169063886b91759061056a908a908790600401613029565b60206040518083038186803b15801561058257600080fd5b505afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190612f4f565b6003546001600160a01b0316611fd5565b506105de836105d9856120e0565b612167565b506105ec846105d9866120e0565b50949350505050565b60015460405163bfdbfc4360e01b815260609160009183916001600160a01b03169063bfdbfc439061062f908a908a908990600401612f9e565b60006040518083038186803b15801561064757600080fd5b505afa15801561065b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106839190810190612d01565b9050606081516001600160401b038111801561069e57600080fd5b506040519080825280602002602001820160405280156106d857816020015b6106c5612b03565b8152602001906001900390816106bd5790505b5090506000805b8351811015610751576107068a8a8684815181106106f957fe5b6020026020010151612212565b83828151811061071257fe5b602002602001018190525061074783828151811061072c57fe5b602002602001015160c001518361207d90919063ffffffff16565b91506001016106df565b50606082516001600160401b038111801561076b57600080fd5b50604051908082528060200260200182016040528015610795578160200160208202803683370190505b5090506000805b8451811015610821576107d9846107d38784815181106107b857fe5b602002602001015160c001518d6124f290919063ffffffff16565b9061254b565b8382815181106107e557fe5b60200260200101818152505061081783828151811061080057fe5b60200260200101518361207d90919063ffffffff16565b915060010161079c565b50888110156108785761085a6108378a8361258d565b8360008151811061084457fe5b602002602001015161207d90919063ffffffff16565b8260008151811061086757fe5b6020026020010181815250506108c2565b6108a8610885828b61258d565b8360008151811061089257fe5b602002602001015161258d90919063ffffffff16565b826000815181106108b557fe5b6020026020010181815250505b83516001600160401b03811180156108d957600080fd5b5060405190808252806020026020018201604052801561091357816020015b610900612ab2565b8152602001906001900390816108f85790505b50965060005b84518110156109b7576040518060c0016040528086838151811061093957fe5b6020026020010151600001516001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b0316815260200184838151811061097d57fe5b6020026020010151815260200160001981526020016000198152508882815181106109a457fe5b6020908102919091010152600101610919565b506109c282856125cf565b9550505050505094509492505050565b60015460405163bfdbfc4360e01b815260609160009183916001600160a01b03169063bfdbfc4390610a0c908a908a908990600401612f9e565b60006040518083038186803b158015610a2457600080fd5b505afa158015610a38573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a609190810190612d01565b9050606081516001600160401b0381118015610a7b57600080fd5b50604051908082528060200260200182016040528015610ab557816020015b610aa2612b03565b815260200190600190039081610a9a5790505b5090506000805b8351811015610b0657610ad68a8a8684815181106106f957fe5b838281518110610ae257fe5b6020026020010181905250610afc83828151811061072c57fe5b9150600101610abc565b50606082516001600160401b0381118015610b2057600080fd5b50604051908082528060200260200182016040528015610b4a578160200160208202803683370190505b5090506000805b8451811015610b9e57610b6d846107d38784815181106107b857fe5b838281518110610b7957fe5b602002602001018181525050610b9483828151811061080057fe5b9150600101610b51565b5088811015610bd257610bb46108378a8361258d565b82600081518110610bc157fe5b602002602001018181525050610bf9565b610bdf610885828b61258d565b82600081518110610bec57fe5b6020026020010181815250505b83516001600160401b0381118015610c1057600080fd5b50604051908082528060200260200182016040528015610c4a57816020015b610c37612ab2565b815260200190600190039081610c2f5790505b50965060005b8451811015610ced576040518060c00160405280868381518110610c7057fe5b6020026020010151600001516001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b03168152602001848381518110610cb457fe5b6020026020010151815260200160008152602001600019815250888281518110610cda57fe5b6020908102919091010152600101610c50565b506109c2828561271f565b610d00612868565b6000546001600160a01b03908116911614610d50576040805162461bcd60e51b815260206004820181905260248201526000805160206131fe833981519152604482015290519081900360640190fd5b610d598161286c565b50565b610d64612868565b6000546001600160a01b03908116911614610db4576040805162461bcd60e51b815260206004820181905260248201526000805160206131fe833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b6000610e1a848330611fd5565b5060005b8551811015611795576000868281518110610e3557fe5b602002602001015151600114156110b957610e4e612ab2565b878381518110610e5a57fe5b6020026020010151600081518110610e6e57fe5b602090810291909101810151908101518151604051636eb1769f60e11b815292935090916000906001600160a01b0384169063dd62ed3e90610eb69030908690600401612fdb565b60206040518083038186803b158015610ece57600080fd5b505afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f069190612f4f565b1115610f9057825160405163095ea7b360e01b81526001600160a01b0384169163095ea7b391610f3c9190600090600401612fc2565b602060405180830381600087803b158015610f5657600080fd5b505af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e9190612edf565b505b8251608084015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b392610fc192600401612fc2565b602060405180830381600087803b158015610fdb57600080fd5b505af1158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110139190612edf565b50806001600160a01b0316637c5e9ea484602001518560800151866040015187606001518860a001516040518663ffffffff1660e01b815260040161105c959493929190612ff5565b6040805180830381600087803b15801561107557600080fd5b505af1158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad9190612f67565b50935061178092505050565b60006110c3612ab2565b8884815181106110cf57fe5b60200260200101516001815181106110e357fe5b60209081029190910181015180519181015160405163f8b2cb4f60e01b81529193506001600160a01b0383169163f8d6aed491839163f8b2cb4f9161112a91600401612f8a565b60206040518083038186803b15801561114257600080fd5b505afa158015611156573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117a9190612f4f565b6020850151604051634a46c67360e11b81526001600160a01b0386169163948d8ce6916111aa9190600401612f8a565b60206040518083038186803b1580156111c257600080fd5b505afa1580156111d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fa9190612f4f565b604080870151905163f8b2cb4f60e01b81526001600160a01b0387169163f8b2cb4f9161122a9190600401612f8a565b60206040518083038186803b15801561124257600080fd5b505afa158015611256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127a9190612f4f565b6040808801519051634a46c67360e11b81526001600160a01b0388169163948d8ce6916112aa9190600401612f8a565b60206040518083038186803b1580156112c257600080fd5b505afa1580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fa9190612f4f565b8760600151876001600160a01b031663d4cadf686040518163ffffffff1660e01b815260040160206040518083038186803b15801561133857600080fd5b505afa15801561134c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113709190612f4f565b6040518763ffffffff1660e01b815260040161139196959493929190613139565b60206040518083038186803b1580156113a957600080fd5b505afa1580156113bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e19190612f4f565b92506113eb612ab2565b8a86815181106113f757fe5b602002602001015160008151811061140b57fe5b602090810291909101810151908101518151604051636eb1769f60e11b81529293509091600019906001600160a01b0384169063dd62ed3e906114549030908690600401612fdb565b60206040518083038186803b15801561146c57600080fd5b505afa158015611480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a49190612f4f565b101561152f57825160405163095ea7b360e01b81526001600160a01b0384169163095ea7b3916114db919060001990600401612fc2565b602060405180830381600087803b1580156114f557600080fd5b505af1158015611509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152d9190612edf565b505b806001600160a01b0316637c5e9ea48460200151856080015186604001518a8860a001516040518663ffffffff1660e01b8152600401611573959493929190612ff5565b6040805180830381600087803b15801561158c57600080fd5b505af11580156115a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c49190612f67565b5060208601518651604051636eb1769f60e11b81529299509091600019916001600160a01b0384169163dd62ed3e9161160291309190600401612fdb565b60206040518083038186803b15801561161a57600080fd5b505afa15801561162e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116529190612f4f565b10156116dd57855160405163095ea7b360e01b81526001600160a01b0383169163095ea7b391611689919060001990600401612fc2565b602060405180830381600087803b1580156116a357600080fd5b505af11580156116b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116db9190612edf565b505b846001600160a01b0316637c5e9ea48760200151886080015189604001518a606001518b60a001516040518663ffffffff1660e01b8152600401611725959493929190612ff5565b6040805180830381600087803b15801561173e57600080fd5b505af1158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190612f67565b5050505050505050505b61178a818461207d565b925050600101610e1e565b50818111156117b65760405162461bcd60e51b8152600401610529906130dd565b6105de836105d9856120e0565b60006117d0858430611fd5565b5060005b8651811015611a51576117e5612ab2565b8782815181106117f157fe5b602090810291909101810151908101518151604051636eb1769f60e11b815292935090916000906001600160a01b0384169063dd62ed3e906118399030908690600401612fdb565b60206040518083038186803b15801561185157600080fd5b505afa158015611865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118899190612f4f565b111561191357825160405163095ea7b360e01b81526001600160a01b0384169163095ea7b3916118bf9190600090600401612fc2565b602060405180830381600087803b1580156118d957600080fd5b505af11580156118ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119119190612edf565b505b8251606084015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b39261194492600401612fc2565b602060405180830381600087803b15801561195e57600080fd5b505af1158015611972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119969190612edf565b5060208301516060840151604080860151608087015160a08801519251638201aa3f60e01b81526000956001600160a01b03881695638201aa3f956119e19592949193600401612ff5565b6040805180830381600087803b1580156119fa57600080fd5b505af1158015611a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a329190612f67565b509050611a3f818761207d565b955050600190930192506117d4915050565b5081811015611a725760405162461bcd60e51b8152600401610529906130b6565b60025460405163886b917560e01b8152611aaa9187916001600160a01b039091169063886b91759061056a908b908990600401613029565b50611ab58482612167565b50611ac3856105d9876120e0565b5095945050505050565b6000546001600160a01b031690565b611ae4612868565b6000546001600160a01b03908116911614611b34576040805162461bcd60e51b815260206004820181905260248201526000805160206131fe833981519152604482015290519081900360640190fd5b610d59816128c5565b6002546001600160a01b031681565b6003546001600160a01b031681565b60006060611b6b878787866105f5565b50905061026f8188888761027a565b6000611b87858430611fd5565b5060005b8651811015611e51576000805b888381518110611ba457fe5b602002602001015151811015611e3b57611bbc612ab2565b898481518110611bc857fe5b60200260200101518281518110611bdb57fe5b602002602001015190506000816020015190508260011415611bff57606082018490525b8151604051636eb1769f60e11b81526000906001600160a01b0384169063dd62ed3e90611c329030908690600401612fdb565b60206040518083038186803b158015611c4a57600080fd5b505afa158015611c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c829190612f4f565b1115611d0c57825160405163095ea7b360e01b81526001600160a01b0384169163095ea7b391611cb89190600090600401612fc2565b602060405180830381600087803b158015611cd257600080fd5b505af1158015611ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0a9190612edf565b505b8251606084015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b392611d3d92600401612fc2565b602060405180830381600087803b158015611d5757600080fd5b505af1158015611d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8f9190612edf565b50806001600160a01b0316638201aa3f84602001518560600151866040015187608001518860a001516040518663ffffffff1660e01b8152600401611dd8959493929190612ff5565b6040805180830381600087803b158015611df157600080fd5b505af1158015611e05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e299190612f67565b5094505060019092019150611b989050565b50611e46818461207d565b925050600101611b8b565b5081811015611e725760405162461bcd60e51b8152600401610529906130b6565b611ab58482612167565b611e84612868565b6000546001600160a01b03908116911614611ed4576040805162461bcd60e51b815260206004820181905260248201526000805160206131fe833981519152604482015290519081900360640190fd5b610d598161291e565b611ee5612868565b6000546001600160a01b03908116911614611f35576040805162461bcd60e51b815260206004820181905260248201526000805160206131fe833981519152604482015290519081900360640190fd5b6001600160a01b038116611f7a5760405162461bcd60e51b81526004018080602001828103825260268152602001806131b76026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040516323b872dd60e01b81526000906001600160a01b038516906323b872dd9061200890339030908890600401612f9e565b602060405180830381600087803b15801561202257600080fd5b505af1158015612036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205a9190612edf565b6120765760405162461bcd60e51b815260040161052990613103565b9392505050565b6000828201838110156120d7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6040516370a0823160e01b81526000906001600160a01b038316906370a082319061210f903090600401612f8a565b60206040518083038186803b15801561212757600080fd5b505afa15801561213b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215f9190612f4f565b90505b919050565b600081612176575060016120da565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb906121a49033908690600401612fc2565b602060405180830381600087803b1580156121be57600080fd5b505af11580156121d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f69190612edf565b6120da5760405162461bcd60e51b815260040161052990613103565b61221a612b03565b60405163f8b2cb4f60e01b815282906000906001600160a01b0383169063f8b2cb4f9061224b908990600401612f8a565b60206040518083038186803b15801561226357600080fd5b505afa158015612277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229b9190612f4f565b90506000826001600160a01b031663f8b2cb4f876040518263ffffffff1660e01b81526004016122cb9190612f8a565b60206040518083038186803b1580156122e357600080fd5b505afa1580156122f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231b9190612f4f565b90506000836001600160a01b031663948d8ce6896040518263ffffffff1660e01b815260040161234b9190612f8a565b60206040518083038186803b15801561236357600080fd5b505afa158015612377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239b9190612f4f565b90506000846001600160a01b031663948d8ce6896040518263ffffffff1660e01b81526004016123cb9190612f8a565b60206040518083038186803b1580156123e357600080fd5b505afa1580156123f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241b9190612f4f565b90506000856001600160a01b031663d4cadf686040518163ffffffff1660e01b815260040160206040518083038186803b15801561245857600080fd5b505afa15801561246c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124909190612f4f565b9050600061249f848685612977565b90506124a9612b03565b506040805160e0810182526001600160a01b038b16815260208101979097528601939093526060850193909352608084015260a083019190915260c08201529150509392505050565b600082612501575060006120da565b8282028284828161250e57fe5b04146120d75760405162461bcd60e51b81526004018080602001828103825260218152602001806131dd6021913960400191505060405180910390fd5b60006120d783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506129b6565b60006120d783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612a58565b6000805b83518110156127185760008382815181106125ea57fe5b6020026020010151600001516001600160a01b031663f8d6aed485848151811061261057fe5b60200260200101516020015186858151811061262857fe5b60200260200101516040015187868151811061264057fe5b60200260200101516060015188878151811061265857fe5b6020026020010151608001518a888151811061267057fe5b60200260200101518a898151811061268457fe5b602002602001015160a001516040518763ffffffff1660e01b81526004016126b196959493929190613139565b60206040518083038186803b1580156126c957600080fd5b505afa1580156126dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127019190612f4f565b905061270d838261207d565b9250506001016125d3565b5092915050565b6000805b835181101561271857600083828151811061273a57fe5b6020026020010151600001516001600160a01b031663ba9530a685848151811061276057fe5b60200260200101516020015186858151811061277857fe5b60200260200101516040015187868151811061279057fe5b6020026020010151606001518887815181106127a857fe5b6020026020010151608001518a88815181106127c057fe5b60200260200101518a89815181106127d457fe5b602002602001015160a001516040518763ffffffff1660e01b815260040161280196959493929190613139565b60206040518083038186803b15801561281957600080fd5b505afa15801561282d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128519190612f4f565b905061285d838261207d565b925050600101612723565b3390565b7ffc1355c6bf6e341201ba7695c4f879f57bbf28f42793686ed3dc8c21935b01088160405161289b9190612f8a565b60405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b7fa084363882435b633c312dcb0f18e29e4e4197405db0122962e0401f4804e0ed816040516128f49190612f8a565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b7f83f3a95cc2d5751cae39beaf6ba7c0c63cfd790bb5bce6570d1572cf812233a48160405161294d9190612f8a565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006129ae670de0b6b3a76400006107d3856129a8612996878a61207d565b6107d38a670de0b6b3a76400006124f2565b906124f2565b949350505050565b60008183612a425760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a075781810151838201526020016129ef565b50505050905090810190601f168015612a345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612a4e57fe5b0495945050505050565b60008184841115612aaa5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612a075781810151838201526020016129ef565b505050900390565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8035612162816131a1565b600082601f830112612b64578081fd5b8135612b77612b7282613184565b613161565b818152915060208083019084810160005b84811015612bb157612b9f888484358a0101612bbc565b84529282019290820190600101612b88565b505050505092915050565b600082601f830112612bcc578081fd5b8135612bda612b7282613184565b818152915060208083019084810160c080850287018301881015612bfd57600080fd5b6000805b86811015612c935782848b031215612c17578182fd5b604080518481018181106001600160401b0382111715612c3357fe5b82528535612c40816131a1565b8152612c4d868801612b49565b87820152612c5c828701612b49565b91810191909152606085810135908201526080808601359082015260a0808601359082015286529484019492820192600101612c01565b5050505050505092915050565b600060208284031215612cb1578081fd5b81356120d7816131a1565b60008060008060808587031215612cd1578283fd5b8435612cdc816131a1565b93506020850135612cec816131a1565b93969395505050506040820135916060013590565b60006020808385031215612d13578182fd5b82516001600160401b03811115612d28578283fd5b8301601f81018513612d38578283fd5b8051612d46612b7282613184565b8181528381019083850185840285018601891015612d62578687fd5b8694505b83851015612d8d578051612d79816131a1565b835260019490940193918501918501612d66565b50979650505050505050565b60008060008060808587031215612dae578384fd5b84356001600160401b03811115612dc3578485fd5b612dcf87828801612b54565b9450506020850135612de0816131a1565b92506040850135612df0816131a1565b9396929550929360600135925050565b600080600080600060a08688031215612e17578081fd5b85356001600160401b03811115612e2c578182fd5b612e3888828901612b54565b9550506020860135612e49816131a1565b93506040860135612e59816131a1565b94979396509394606081013594506080013592915050565b60008060008060808587031215612e86578384fd5b84356001600160401b03811115612e9b578485fd5b612dcf87828801612bbc565b600080600080600060a08688031215612ebe578081fd5b85356001600160401b03811115612ed3578182fd5b612e3888828901612bbc565b600060208284031215612ef0578081fd5b815180151581146120d7578182fd5b600080600080600060a08688031215612f16578283fd5b8535612f21816131a1565b94506020860135612f31816131a1565b94979496505050506040830135926060810135926080909101359150565b600060208284031215612f60578081fd5b5051919050565b60008060408385031215612f79578182fd5b505080516020909101519092909150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03958616815260208101949094529190931660408301526060820192909252608081019190915260a00190565b6040808252835182820181905260009190606090818501906020808901865b838110156130a257815180516001600160a01b0390811687528482015181168588015288820151168887015286810151878701526080808201519087015260a0908101519086015260c09094019390820190600101613048565b505095909501959095525092949350505050565b6020808252600d908201526c11549497d31253525517d3d555609a1b604082015260600190565b6020808252600c908201526b22a9292fa624a6a4aa2fa4a760a11b604082015260600190565b60208082526013908201527211549497d514905394d1915497d19052531151606a1b604082015260600190565b90815260200190565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b6040518181016001600160401b038111828210171561317c57fe5b604052919050565b60006001600160401b0382111561319757fe5b5060209081020190565b6001600160a01b0381168114610d5957600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122010f22080cf53fc0189e31b755c573cc67eb75a3f5b13589ba8fac82543f225d564736f6c63430007040033";

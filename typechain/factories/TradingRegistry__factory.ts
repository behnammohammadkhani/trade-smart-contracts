/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TradingRegistry } from "../TradingRegistry";

export class TradingRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _eurPriceFeed: string,
    overrides?: Overrides
  ): Promise<TradingRegistry> {
    return super.deploy(
      _eurPriceFeed,
      overrides || {}
    ) as Promise<TradingRegistry>;
  }
  getDeployTransaction(
    _eurPriceFeed: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_eurPriceFeed, overrides || {});
  }
  attach(address: string): TradingRegistry {
    return super.attach(address) as TradingRegistry;
  }
  connect(signer: Signer): TradingRegistry__factory {
    return super.connect(signer) as TradingRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradingRegistry {
    return new Contract(address, _abi, signerOrProvider) as TradingRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_eurPriceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "AssetAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "AssetDisallowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newEurPriceFeed",
        type: "address",
      },
    ],
    name: "EurPriceFeedSetted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_operation",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "allowAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedAssets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "disallowAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eurPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eurPriceFeed",
        type: "address",
      },
    ],
    name: "setEurPriceFeed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "tradingBalanceByOperation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a53380380610a538339818101604052602081101561003357600080fd5b5051600061003f6100ae565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b03929092169190911790556100b2565b3390565b610992806100c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a4c1cccb11610066578063a4c1cccb14610157578063b7c5ba6e1461017d578063dd561ae4146101c5578063e7592c6014610201578063f2fde38b146102095761009e565b80632298d849146100a3578063715018a6146100dd5780638da5cb5b146100e75780639b00f17f1461010b578063a013b1e714610131575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b031661022f565b604080519115158252519081900360200190f35b6100e5610339565b005b6100ef6103db565b604080516001600160a01b039092168252519081900360200190f35b6100c96004803603602081101561012157600080fd5b50356001600160a01b03166103ea565b6100c96004803603602081101561014757600080fd5b50356001600160a01b03166104e0565b6100c96004803603602081101561016d57600080fd5b50356001600160a01b03166105ee565b6101b36004803603604081101561019357600080fd5b5080356001600160a01b031690602001356001600160e01b031916610603565b60408051918252519081900360200190f35b6100e5600480360360608110156101db57600080fd5b506001600160a01b03813516906001600160e01b03196020820135169060400135610620565b6100ef610788565b6100e56004803603602081101561021f57600080fd5b50356001600160a01b0316610797565b600061023961088f565b6000546001600160a01b03908116911614610289576040805162461bcd60e51b8152602060048201819052602482015260008051602061093d833981519152604482015290519081900360640190fd5b6001600160a01b0382166102e0576040805162461bcd60e51b8152602060048201526019602482015278617373657420697320746865207a65726f206164647265737360381b604482015290519081900360640190fd5b6040516001600160a01b038316907f64f770173a842a91a8c4549d8c5f35cfeaf6a5eb4c115fe4e71bf43c7ac6f6f190600090a2506001600160a01b03166000908152600260205260409020805460ff19169055600190565b61034161088f565b6000546001600160a01b03908116911614610391576040805162461bcd60e51b8152602060048201819052602482015260008051602061093d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60006103f461088f565b6000546001600160a01b03908116911614610444576040805162461bcd60e51b8152602060048201819052602482015260008051602061093d833981519152604482015290519081900360640190fd5b6001600160a01b0382166104895760405162461bcd60e51b815260040180806020018281038252602281526020018061091b6022913960400191505060405180910390fd5b6040516001600160a01b038316907f336e2f7fc520f6a7f2dac013282afb0ed3ba6d85e10cbce0de46ccc4af95b56b90600090a250600180546001600160a01b0383166001600160a01b0319909116178155919050565b60006104ea61088f565b6000546001600160a01b0390811691161461053a576040805162461bcd60e51b8152602060048201819052602482015260008051602061093d833981519152604482015290519081900360640190fd5b6001600160a01b038216610591576040805162461bcd60e51b8152602060048201526019602482015278617373657420697320746865207a65726f206164647265737360381b604482015290519081900360640190fd5b6040516001600160a01b038316907f0e057436ecd2dd0d29eb1335ca540924d1457bbe2b040289a04d7731b8c93f3690600090a2506001600160a01b03166000908152600260205260409020805460ff1916600190811790915590565b60026020526000908152604090205460ff1681565b600360209081526000928352604080842090915290825290205481565b6002600061062c61088f565b6001600160a01b0316815260208101919091526040016000205460ff16610691576040805162461bcd60e51b8152602060048201526014602482015273185cdcd95d081a5cc81b9bdd08185b1b1bddd95960621b604482015290519081900360640190fd5b6001600160a01b0380841660009081526003602090815260408083206001600160e01b031987168452909152902054600154909161074f91166329550f976106d761088f565b856040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b15801561071c57600080fd5b505afa158015610730573d6000803e3d6000fd5b505050506040513d602081101561074657600080fd5b50518290610893565b6001600160a01b0390941660009081526003602090815260408083206001600160e01b0319909616835294905292909220929092555050565b6001546001600160a01b031681565b61079f61088f565b6000546001600160a01b039081169116146107ef576040805162461bcd60e51b8152602060048201819052602482015260008051602061093d833981519152604482015290519081900360640190fd5b6001600160a01b0381166108345760405162461bcd60e51b81526004018080602001828103825260268152602001806108f56026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000828201838110156108ed576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373657572207072696365206665656420697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220a0037df6f847b5aadbd16b01d92c2787f7aeffa6d95704a354aeee553954efab64736f6c63430007040033";

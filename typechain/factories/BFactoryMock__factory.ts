/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BFactoryMock } from "../BFactoryMock";

export class BFactoryMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BFactoryMock> {
    return super.deploy(overrides || {}) as Promise<BFactoryMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BFactoryMock {
    return super.attach(address) as BFactoryMock;
  }
  connect(signer: Signer): BFactoryMock__factory {
    return super.connect(signer) as BFactoryMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BFactoryMock {
    return new Contract(address, _abi, signerOrProvider) as BFactoryMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isBPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isBPoolAnswer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "answer",
        type: "bool",
      },
    ],
    name: "setIsBPoolAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b5061012c8061002a6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dade644146041578063c2bb6dc2146052578063f8963c6c146075575b600080fd5b6050604c36600460cd565b607b565b005b6061605d36600460a1565b608e565b604051606c919060eb565b60405180910390f35b60616098565b6000805460ff1916911515919091179055565b5060005460ff1690565b60005460ff1681565b60006020828403121560b1578081fd5b81356001600160a01b038116811460c6578182fd5b9392505050565b60006020828403121560dd578081fd5b8135801515811460c6578182fd5b90151581526020019056fea26469706673582212208ed7caae1f98c53f15e31fad48a4d0482335f0a9c8c2db4dac3677686f5917ac64736f6c63430007040033";

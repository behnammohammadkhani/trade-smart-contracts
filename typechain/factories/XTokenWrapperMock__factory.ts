/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { XTokenWrapperMock } from "../XTokenWrapperMock";

export class XTokenWrapperMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<XTokenWrapperMock> {
    return super.deploy(overrides || {}) as Promise<XTokenWrapperMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): XTokenWrapperMock {
    return super.attach(address) as XTokenWrapperMock;
  }
  connect(signer: Signer): XTokenWrapperMock__factory {
    return super.connect(signer) as XTokenWrapperMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XTokenWrapperMock {
    return new Contract(address, _abi, signerOrProvider) as XTokenWrapperMock;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "xToken",
    outputs: [
      {
        internalType: "contract IXToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "xToken",
        type: "address",
      },
    ],
    name: "xTokenToToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100216301ffc9a760e01b610036565b610031630271189760e51b610036565b6100ba565b6001600160e01b03198082161415610095576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b610596806100c96000396000f3fe6080604052600436106100705760003560e01c8063bc197c811161004e578063bc197c811461011a578063bf376c7a14610305578063e1d5769514610331578063f23a6e611461036457610070565b806301ffc9a714610075578063088b699e146100bd57806339f47693146100ee575b600080fd5b34801561008157600080fd5b506100a96004803603602081101561009857600080fd5b50356001600160e01b03191661043a565b604080519115158252519081900360200190f35b3480156100c957600080fd5b506100d2610459565b604080516001600160a01b039092168252519081900360200190f35b6100a96004803603604081101561010457600080fd5b506001600160a01b038135169060200135610468565b34801561012657600080fd5b506102e8600480360360a081101561013d57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561017057600080fd5b82018360208201111561018257600080fd5b803590602001918460208302840111600160201b831117156101a357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156101f257600080fd5b82018360208201111561020457600080fd5b803590602001918460208302840111600160201b8311171561022557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111600160201b831117156102a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104e2945050505050565b604080516001600160e01b03199092168252519081900360200190f35b6100a96004803603604081101561031b57600080fd5b506001600160a01b0381351690602001356104f3565b34801561033d57600080fd5b506100d26004803603602081101561035457600080fd5b50356001600160a01b031661054c565b34801561037057600080fd5b506102e8600480360360a081101561038757600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b8111156103c657600080fd5b8201836020820111156103d857600080fd5b803590602001918460018302840111600160201b831117156103f957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061054f945050505050565b6001600160e01b03191660009081526020819052604090205460ff1690565b6001546001600160a01b031681565b6000826001600160a01b03166379cc679033846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156104c157600080fd5b505af11580156104d5573d6000803e3d6000fd5b5060019695505050505050565b63bc197c8160e01b95945050505050565b6000826001600160a01b03166340c10f1933846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156104c157600080fd5b90565b63f23a6e6160e01b9594505050505056fea26469706673582212205b09de3d867dfc9968fc8fa93bf7ce88ae9501ce00f34adc25d33fef178d407464736f6c63430007040033";

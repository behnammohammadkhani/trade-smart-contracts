/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface EurPriceFeedInterface extends ethers.utils.Interface {
  functions: {
    "DEFAULT_ADMIN_ROLE()": FunctionFragment;
    "FEEDS_MANAGER_ROLE()": FunctionFragment;
    "assetEthFeed(address)": FunctionFragment;
    "calculateAmount(address,uint256)": FunctionFragment;
    "ethUsdFeed()": FunctionFragment;
    "eurUsdFeed()": FunctionFragment;
    "getPrice(address)": FunctionFragment;
    "getRoleAdmin(bytes32)": FunctionFragment;
    "getRoleMember(bytes32,uint256)": FunctionFragment;
    "getRoleMemberCount(bytes32)": FunctionFragment;
    "grantRole(bytes32,address)": FunctionFragment;
    "hasRole(bytes32,address)": FunctionFragment;
    "renounceRole(bytes32,address)": FunctionFragment;
    "revokeRole(bytes32,address)": FunctionFragment;
    "setAssetFeed(address,address)": FunctionFragment;
    "setAssetsFeeds(address[],address[])": FunctionFragment;
    "setEthUsdFeed(address)": FunctionFragment;
    "setEurUsdFeed(address)": FunctionFragment;
    "setFeedsManager(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "FEEDS_MANAGER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assetEthFeed",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "calculateAmount",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ethUsdFeed",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "eurUsdFeed",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getPrice", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setAssetFeed",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setAssetsFeeds",
    values: [string[], string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setEthUsdFeed",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setEurUsdFeed",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFeedsManager",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "FEEDS_MANAGER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetEthFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "calculateAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ethUsdFeed", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "eurUsdFeed", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getPrice", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAssetFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAssetsFeeds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEthUsdFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setEurUsdFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeedsManager",
    data: BytesLike
  ): Result;

  events: {
    "AssetEthFeedSet(address,address)": EventFragment;
    "EthUsdFeedSet(address)": EventFragment;
    "EurUsdFeedSet(address)": EventFragment;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": EventFragment;
    "RoleGranted(bytes32,address,address)": EventFragment;
    "RoleRevoked(bytes32,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AssetEthFeedSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EthUsdFeedSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EurUsdFeedSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleAdminChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleGranted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleRevoked"): EventFragment;
}

export class EurPriceFeed extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: EurPriceFeedInterface;

  functions: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    FEEDS_MANAGER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "FEEDS_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    assetEthFeed(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    "assetEthFeed(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    calculateAmount(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "calculateAmount(address,uint256)"(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    ethUsdFeed(overrides?: CallOverrides): Promise<[string]>;

    "ethUsdFeed()"(overrides?: CallOverrides): Promise<[string]>;

    eurUsdFeed(overrides?: CallOverrides): Promise<[string]>;

    "eurUsdFeed()"(overrides?: CallOverrides): Promise<[string]>;

    getPrice(_asset: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "getPrice(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setAssetFeed(
      _asset: string,
      _feed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAssetFeed(address,address)"(
      _asset: string,
      _feed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setAssetsFeeds(
      _assets: string[],
      _feeds: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAssetsFeeds(address[],address[])"(
      _assets: string[],
      _feeds: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setEthUsdFeed(
      _ethUsdFeed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setEthUsdFeed(address)"(
      _ethUsdFeed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setEurUsdFeed(
      _eurUsdFeed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setEurUsdFeed(address)"(
      _eurUsdFeed: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setFeedsManager(
      _account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFeedsManager(address)"(
      _account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

  FEEDS_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>;

  "FEEDS_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<string>;

  assetEthFeed(arg0: string, overrides?: CallOverrides): Promise<string>;

  "assetEthFeed(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  calculateAmount(
    _asset: string,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "calculateAmount(address,uint256)"(
    _asset: string,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  ethUsdFeed(overrides?: CallOverrides): Promise<string>;

  "ethUsdFeed()"(overrides?: CallOverrides): Promise<string>;

  eurUsdFeed(overrides?: CallOverrides): Promise<string>;

  "eurUsdFeed()"(overrides?: CallOverrides): Promise<string>;

  getPrice(_asset: string, overrides?: CallOverrides): Promise<BigNumber>;

  "getPrice(address)"(
    _asset: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getRoleAdmin(bytes32)"(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getRoleMember(
    role: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getRoleMember(bytes32,uint256)"(
    role: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getRoleMemberCount(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getRoleMemberCount(bytes32)"(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  grantRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "grantRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  hasRole(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "hasRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  renounceRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "renounceRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  revokeRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setAssetFeed(
    _asset: string,
    _feed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAssetFeed(address,address)"(
    _asset: string,
    _feed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setAssetsFeeds(
    _assets: string[],
    _feeds: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAssetsFeeds(address[],address[])"(
    _assets: string[],
    _feeds: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setEthUsdFeed(
    _ethUsdFeed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setEthUsdFeed(address)"(
    _ethUsdFeed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setEurUsdFeed(
    _eurUsdFeed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setEurUsdFeed(address)"(
    _eurUsdFeed: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setFeedsManager(
    _account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setFeedsManager(address)"(
    _account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

    FEEDS_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>;

    "FEEDS_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<string>;

    assetEthFeed(arg0: string, overrides?: CallOverrides): Promise<string>;

    "assetEthFeed(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    calculateAmount(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "calculateAmount(address,uint256)"(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ethUsdFeed(overrides?: CallOverrides): Promise<string>;

    "ethUsdFeed()"(overrides?: CallOverrides): Promise<string>;

    eurUsdFeed(overrides?: CallOverrides): Promise<string>;

    "eurUsdFeed()"(overrides?: CallOverrides): Promise<string>;

    getPrice(_asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getPrice(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setAssetFeed(
      _asset: string,
      _feed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAssetFeed(address,address)"(
      _asset: string,
      _feed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setAssetsFeeds(
      _assets: string[],
      _feeds: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setAssetsFeeds(address[],address[])"(
      _assets: string[],
      _feeds: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    setEthUsdFeed(
      _ethUsdFeed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setEthUsdFeed(address)"(
      _ethUsdFeed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setEurUsdFeed(
      _eurUsdFeed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setEurUsdFeed(address)"(
      _eurUsdFeed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFeedsManager(_account: string, overrides?: CallOverrides): Promise<void>;

    "setFeedsManager(address)"(
      _account: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    AssetEthFeedSet(asset: string | null, feed: string | null): EventFilter;

    EthUsdFeedSet(newEthUsdFeed: string | null): EventFilter;

    EurUsdFeedSet(newEurUsdFeed: string | null): EventFilter;

    RoleAdminChanged(
      role: BytesLike | null,
      previousAdminRole: BytesLike | null,
      newAdminRole: BytesLike | null
    ): EventFilter;

    RoleGranted(
      role: BytesLike | null,
      account: string | null,
      sender: string | null
    ): EventFilter;

    RoleRevoked(
      role: BytesLike | null,
      account: string | null,
      sender: string | null
    ): EventFilter;
  };

  estimateGas: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    FEEDS_MANAGER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "FEEDS_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    assetEthFeed(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "assetEthFeed(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    calculateAmount(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "calculateAmount(address,uint256)"(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ethUsdFeed(overrides?: CallOverrides): Promise<BigNumber>;

    "ethUsdFeed()"(overrides?: CallOverrides): Promise<BigNumber>;

    eurUsdFeed(overrides?: CallOverrides): Promise<BigNumber>;

    "eurUsdFeed()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPrice(_asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getPrice(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setAssetFeed(
      _asset: string,
      _feed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAssetFeed(address,address)"(
      _asset: string,
      _feed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setAssetsFeeds(
      _assets: string[],
      _feeds: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAssetsFeeds(address[],address[])"(
      _assets: string[],
      _feeds: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    setEthUsdFeed(
      _ethUsdFeed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setEthUsdFeed(address)"(
      _ethUsdFeed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setEurUsdFeed(
      _eurUsdFeed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setEurUsdFeed(address)"(
      _eurUsdFeed: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setFeedsManager(
      _account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setFeedsManager(address)"(
      _account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DEFAULT_ADMIN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DEFAULT_ADMIN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    FEEDS_MANAGER_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "FEEDS_MANAGER_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    assetEthFeed(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "assetEthFeed(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    calculateAmount(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "calculateAmount(address,uint256)"(
      _asset: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ethUsdFeed(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ethUsdFeed()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    eurUsdFeed(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "eurUsdFeed()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPrice(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPrice(address)"(
      _asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setAssetFeed(
      _asset: string,
      _feed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAssetFeed(address,address)"(
      _asset: string,
      _feed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setAssetsFeeds(
      _assets: string[],
      _feeds: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAssetsFeeds(address[],address[])"(
      _assets: string[],
      _feeds: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setEthUsdFeed(
      _ethUsdFeed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setEthUsdFeed(address)"(
      _ethUsdFeed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setEurUsdFeed(
      _eurUsdFeed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setEurUsdFeed(address)"(
      _eurUsdFeed: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setFeedsManager(
      _account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFeedsManager(address)"(
      _account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface BPoolProxyInterface extends ethers.utils.Interface {
  functions: {
    "batchSwapExactIn(tuple[],address,address,uint256,uint256)": FunctionFragment;
    "batchSwapExactOut(tuple[],address,address,uint256)": FunctionFragment;
    "feeReceiver()": FunctionFragment;
    "multihopBatchSwapExactIn(tuple[][],address,address,uint256,uint256)": FunctionFragment;
    "multihopBatchSwapExactOut(tuple[][],address,address,uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "protocolFee()": FunctionFragment;
    "registry()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setFeeReceiver(address)": FunctionFragment;
    "setProtocolFee(address)": FunctionFragment;
    "setRegistry(address)": FunctionFragment;
    "smartSwapExactIn(address,address,uint256,uint256,uint256)": FunctionFragment;
    "smartSwapExactOut(address,address,uint256,uint256,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "viewSplitExactIn(address,address,uint256,uint256)": FunctionFragment;
    "viewSplitExactOut(address,address,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "batchSwapExactIn",
    values: [
      {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      string,
      string,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchSwapExactOut",
    values: [
      {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      string,
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "feeReceiver",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "multihopBatchSwapExactIn",
    values: [
      {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      string,
      string,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "multihopBatchSwapExactOut",
    values: [
      {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      string,
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "protocolFee",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "registry", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setFeeReceiver",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProtocolFee",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setRegistry", values: [string]): string;
  encodeFunctionData(
    functionFragment: "smartSwapExactIn",
    values: [string, string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "smartSwapExactOut",
    values: [string, string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "viewSplitExactIn",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "viewSplitExactOut",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchSwapExactIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchSwapExactOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "feeReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "multihopBatchSwapExactIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "multihopBatchSwapExactOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "protocolFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeeReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProtocolFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "smartSwapExactIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "smartSwapExactOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewSplitExactIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewSplitExactOut",
    data: BytesLike
  ): Result;

  events: {
    "FeeReceiverSetted(address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "ProtocolFeeSetted(address)": EventFragment;
    "RegistrySetted(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "FeeReceiverSetted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProtocolFeeSetted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RegistrySetted"): EventFragment;
}

export class BPoolProxy extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: BPoolProxyInterface;

  functions: {
    batchSwapExactIn(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchSwapExactIn(tuple[],address,address,uint256,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    batchSwapExactOut(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "batchSwapExactOut(tuple[],address,address,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    feeReceiver(overrides?: CallOverrides): Promise<[string]>;

    "feeReceiver()"(overrides?: CallOverrides): Promise<[string]>;

    multihopBatchSwapExactIn(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "multihopBatchSwapExactIn(tuple[][],address,address,uint256,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    multihopBatchSwapExactOut(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "multihopBatchSwapExactOut(tuple[][],address,address,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    protocolFee(overrides?: CallOverrides): Promise<[string]>;

    "protocolFee()"(overrides?: CallOverrides): Promise<[string]>;

    registry(overrides?: CallOverrides): Promise<[string]>;

    "registry()"(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    setFeeReceiver(
      _feeReceiver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFeeReceiver(address)"(
      _feeReceiver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setProtocolFee(
      _protocolFee: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setProtocolFee(address)"(
      _protocolFee: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setRegistry(
      _registry: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setRegistry(address)"(
      _registry: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    smartSwapExactIn(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "smartSwapExactIn(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    smartSwapExactOut(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "smartSwapExactOut(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    viewSplitExactIn(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;

    "viewSplitExactIn(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;

    viewSplitExactOut(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;

    "viewSplitExactOut(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;
  };

  batchSwapExactIn(
    swaps: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[],
    tokenIn: string,
    tokenOut: string,
    totalAmountIn: BigNumberish,
    minTotalAmountOut: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchSwapExactIn(tuple[],address,address,uint256,uint256)"(
    swaps: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[],
    tokenIn: string,
    tokenOut: string,
    totalAmountIn: BigNumberish,
    minTotalAmountOut: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  batchSwapExactOut(
    swaps: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[],
    tokenIn: string,
    tokenOut: string,
    maxTotalAmountIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "batchSwapExactOut(tuple[],address,address,uint256)"(
    swaps: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[],
    tokenIn: string,
    tokenOut: string,
    maxTotalAmountIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  feeReceiver(overrides?: CallOverrides): Promise<string>;

  "feeReceiver()"(overrides?: CallOverrides): Promise<string>;

  multihopBatchSwapExactIn(
    swapSequences: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[][],
    tokenIn: string,
    tokenOut: string,
    totalAmountIn: BigNumberish,
    minTotalAmountOut: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "multihopBatchSwapExactIn(tuple[][],address,address,uint256,uint256)"(
    swapSequences: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[][],
    tokenIn: string,
    tokenOut: string,
    totalAmountIn: BigNumberish,
    minTotalAmountOut: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  multihopBatchSwapExactOut(
    swapSequences: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[][],
    tokenIn: string,
    tokenOut: string,
    maxTotalAmountIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "multihopBatchSwapExactOut(tuple[][],address,address,uint256)"(
    swapSequences: {
      pool: string;
      tokenIn: string;
      tokenOut: string;
      swapAmount: BigNumberish;
      limitReturnAmount: BigNumberish;
      maxPrice: BigNumberish;
    }[][],
    tokenIn: string,
    tokenOut: string,
    maxTotalAmountIn: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  protocolFee(overrides?: CallOverrides): Promise<string>;

  "protocolFee()"(overrides?: CallOverrides): Promise<string>;

  registry(overrides?: CallOverrides): Promise<string>;

  "registry()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  setFeeReceiver(
    _feeReceiver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setFeeReceiver(address)"(
    _feeReceiver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setProtocolFee(
    _protocolFee: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setProtocolFee(address)"(
    _protocolFee: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setRegistry(
    _registry: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setRegistry(address)"(
    _registry: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  smartSwapExactIn(
    tokenIn: string,
    tokenOut: string,
    totalAmountIn: BigNumberish,
    minTotalAmountOut: BigNumberish,
    nPools: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "smartSwapExactIn(address,address,uint256,uint256,uint256)"(
    tokenIn: string,
    tokenOut: string,
    totalAmountIn: BigNumberish,
    minTotalAmountOut: BigNumberish,
    nPools: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  smartSwapExactOut(
    tokenIn: string,
    tokenOut: string,
    totalAmountOut: BigNumberish,
    maxTotalAmountIn: BigNumberish,
    nPools: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "smartSwapExactOut(address,address,uint256,uint256,uint256)"(
    tokenIn: string,
    tokenOut: string,
    totalAmountOut: BigNumberish,
    maxTotalAmountIn: BigNumberish,
    nPools: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  viewSplitExactIn(
    tokenIn: string,
    tokenOut: string,
    swapAmount: BigNumberish,
    nPools: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[],
      BigNumber
    ] & {
      swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[];
      totalOutput: BigNumber;
    }
  >;

  "viewSplitExactIn(address,address,uint256,uint256)"(
    tokenIn: string,
    tokenOut: string,
    swapAmount: BigNumberish,
    nPools: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[],
      BigNumber
    ] & {
      swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[];
      totalOutput: BigNumber;
    }
  >;

  viewSplitExactOut(
    tokenIn: string,
    tokenOut: string,
    swapAmount: BigNumberish,
    nPools: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[],
      BigNumber
    ] & {
      swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[];
      totalOutput: BigNumber;
    }
  >;

  "viewSplitExactOut(address,address,uint256,uint256)"(
    tokenIn: string,
    tokenOut: string,
    swapAmount: BigNumberish,
    nPools: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[],
      BigNumber
    ] & {
      swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumber;
        limitReturnAmount: BigNumber;
        maxPrice: BigNumber;
      })[];
      totalOutput: BigNumber;
    }
  >;

  callStatic: {
    batchSwapExactIn(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "batchSwapExactIn(tuple[],address,address,uint256,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchSwapExactOut(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "batchSwapExactOut(tuple[],address,address,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    feeReceiver(overrides?: CallOverrides): Promise<string>;

    "feeReceiver()"(overrides?: CallOverrides): Promise<string>;

    multihopBatchSwapExactIn(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "multihopBatchSwapExactIn(tuple[][],address,address,uint256,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    multihopBatchSwapExactOut(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "multihopBatchSwapExactOut(tuple[][],address,address,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    protocolFee(overrides?: CallOverrides): Promise<string>;

    "protocolFee()"(overrides?: CallOverrides): Promise<string>;

    registry(overrides?: CallOverrides): Promise<string>;

    "registry()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setFeeReceiver(
      _feeReceiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFeeReceiver(address)"(
      _feeReceiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setProtocolFee(
      _protocolFee: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setProtocolFee(address)"(
      _protocolFee: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setRegistry(_registry: string, overrides?: CallOverrides): Promise<void>;

    "setRegistry(address)"(
      _registry: string,
      overrides?: CallOverrides
    ): Promise<void>;

    smartSwapExactIn(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "smartSwapExactIn(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    smartSwapExactOut(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "smartSwapExactOut(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    viewSplitExactIn(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;

    "viewSplitExactIn(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;

    viewSplitExactOut(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;

    "viewSplitExactOut(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[],
        BigNumber
      ] & {
        swaps: ([string, string, string, BigNumber, BigNumber, BigNumber] & {
          pool: string;
          tokenIn: string;
          tokenOut: string;
          swapAmount: BigNumber;
          limitReturnAmount: BigNumber;
          maxPrice: BigNumber;
        })[];
        totalOutput: BigNumber;
      }
    >;
  };

  filters: {
    FeeReceiverSetted(feeReceiver: null): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    ProtocolFeeSetted(protocolFee: null): EventFilter;

    RegistrySetted(registry: null): EventFilter;
  };

  estimateGas: {
    batchSwapExactIn(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchSwapExactIn(tuple[],address,address,uint256,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    batchSwapExactOut(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "batchSwapExactOut(tuple[],address,address,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    feeReceiver(overrides?: CallOverrides): Promise<BigNumber>;

    "feeReceiver()"(overrides?: CallOverrides): Promise<BigNumber>;

    multihopBatchSwapExactIn(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "multihopBatchSwapExactIn(tuple[][],address,address,uint256,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    multihopBatchSwapExactOut(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "multihopBatchSwapExactOut(tuple[][],address,address,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    protocolFee(overrides?: CallOverrides): Promise<BigNumber>;

    "protocolFee()"(overrides?: CallOverrides): Promise<BigNumber>;

    registry(overrides?: CallOverrides): Promise<BigNumber>;

    "registry()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    setFeeReceiver(
      _feeReceiver: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setFeeReceiver(address)"(
      _feeReceiver: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setProtocolFee(
      _protocolFee: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setProtocolFee(address)"(
      _protocolFee: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setRegistry(_registry: string, overrides?: Overrides): Promise<BigNumber>;

    "setRegistry(address)"(
      _registry: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    smartSwapExactIn(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "smartSwapExactIn(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    smartSwapExactOut(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "smartSwapExactOut(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    viewSplitExactIn(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "viewSplitExactIn(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    viewSplitExactOut(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "viewSplitExactOut(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchSwapExactIn(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchSwapExactIn(tuple[],address,address,uint256,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    batchSwapExactOut(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "batchSwapExactOut(tuple[],address,address,uint256)"(
      swaps: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    feeReceiver(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "feeReceiver()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    multihopBatchSwapExactIn(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "multihopBatchSwapExactIn(tuple[][],address,address,uint256,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    multihopBatchSwapExactOut(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "multihopBatchSwapExactOut(tuple[][],address,address,uint256)"(
      swapSequences: {
        pool: string;
        tokenIn: string;
        tokenOut: string;
        swapAmount: BigNumberish;
        limitReturnAmount: BigNumberish;
        maxPrice: BigNumberish;
      }[][],
      tokenIn: string,
      tokenOut: string,
      maxTotalAmountIn: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    protocolFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "protocolFee()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "registry()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    setFeeReceiver(
      _feeReceiver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFeeReceiver(address)"(
      _feeReceiver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setProtocolFee(
      _protocolFee: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setProtocolFee(address)"(
      _protocolFee: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setRegistry(
      _registry: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setRegistry(address)"(
      _registry: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    smartSwapExactIn(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "smartSwapExactIn(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountIn: BigNumberish,
      minTotalAmountOut: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    smartSwapExactOut(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "smartSwapExactOut(address,address,uint256,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      totalAmountOut: BigNumberish,
      maxTotalAmountIn: BigNumberish,
      nPools: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    viewSplitExactIn(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "viewSplitExactIn(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    viewSplitExactOut(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "viewSplitExactOut(address,address,uint256,uint256)"(
      tokenIn: string,
      tokenOut: string,
      swapAmount: BigNumberish,
      nPools: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
